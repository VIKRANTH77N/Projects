# -*- coding: utf-8 -*-
"""Admissionprediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t-AYeNt8jZUgQ3RtFBO9WT-GrISunaKf

We will import the library to start the analysis.
"""

import pandas as pd

"""We will now read the data file."""

admission = pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/Admission%20Chance.csv')

"""After reading the data file, using .columns function we shall identify what all columns are there in the data set and then identify the independent and dependent variables."""

admission.columns

"""After identifying the columns , now we shall identify our x,y the targets in our data set."""

y = admission['Chance of Admit ']

x = admission[['Serial No', 'GRE Score', 'TOEFL Score', 'University Rating', ' SOP',
       'LOR ', 'CGPA', 'Research']]

"""Once the target is sorted, we shall use sklearn library to sort the data in training and testing ."""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.7,random_state =2529)

"""Now we shall check the shape of training and testing variables using the .shape function"""

x_train.shape,x_test.shape,y_train.shape,y_test.shape

"""Now it is time to select the model for our analysis using sklearn library

"""

from sklearn.linear_model import LinearRegression
model = LinearRegression()

"""Now we shall train/fit the data according to the model."""

model.fit(x_train,y_train)

"""Now we shall find out the y=mx+c values, first the intercept and then the slope to get the predicted values using the selected model for analysis."""

model.intercept_

model.coef_

"""Now we shall find the predicted values of the data."""

y_pred = model.predict(x_test)

y_pred

"""Now let us identify the error in the analysis using skelarn library ."""

from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error,mean_squared_error

mean_absolute_error(y_test,y_pred)

mean_absolute_percentage_error(y_test,y_pred)

mean_squared_error(y_test,y_pred)

"""Now the accuracy is calculated by subtracting 100% - the mean error we found out using the sklearn library.

> Indented block


"""